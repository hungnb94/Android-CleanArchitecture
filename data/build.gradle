buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
//    classpath 'me.tatarka:gradle-retrolambda:3.2.3'
  }
}

apply plugin: 'com.android.library'
//apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'me.tatarka.retrolambda'

android {
  defaultPublishConfig "debug"

  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  packagingOptions {
    resources {
      excludes += ['LICENSE.txt', 'META-INF/DEPENDENCIES', 'META-INF/ASL2.0', 'META-INF/NOTICE', 'META-INF/LICENSE']
    }
  }


  namespace 'com.fernandocejas.android10.sample.data'
  lint {
    abortOnError false
    disable 'InvalidPackage', 'OldTargetApi'
    ignoreWarnings true
    quiet true
  }
}

dependencies {
  def dataDependencies = rootProject.ext.dataDependencies
  def testDependencies = rootProject.ext.dataTestDependencies

  implementation  project(':domain')
  compileOnly dataDependencies.javaxAnnotation
  implementation dataDependencies.javaxInject
  implementation dataDependencies.okHttp
  implementation dataDependencies.gson
  implementation dataDependencies.rxJava
  implementation dataDependencies.rxAndroid
  implementation dataDependencies.androidAnnotations

  testImplementation testDependencies.junit
  testImplementation testDependencies.assertj
  testImplementation testDependencies.mockito
  testImplementation testDependencies.robolectric
}
